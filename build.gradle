plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'dev.taah'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
jar {
    manifest {
        attributes["Main-Class"] = "dev.taah.sharex.ShareX"
    }
}

application {
    mainModule = 'dev.taah.sharex'
    mainClass = 'dev.taah.sharex.ShareX'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1') {
        exclude(group: 'org.openjfx')
    }
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.3.1') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'){
        exclude(group: 'org.openjfx')
    }
    implementation('eu.hansolo:tilesfx:17.1.9') {
        exclude(group: 'org.openjfx')
    }
    implementation('eu.hansolo.fx:countries:17.0.23'){
        exclude(group: 'org.openjfx')
    }
    implementation("eu.hansolo.fx:heatmap:17.0.12"){
        exclude(group: 'org.openjfx')
    }
    implementation("eu.hansolo:toolboxfx:17.0.33"){
        exclude(group: 'org.openjfx')
    }
    implementation("eu.hansolo:toolbox:17.0.43"){
        exclude(group: 'org.openjfx')
    }
    implementation("com.github.kwhat:jnativehook:2.2.2")

    implementation("org.projectlombok:lombok:1.18.26")
    annotationProcessor("org.projectlombok:lombok:1.18.26")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}